import { Card, CardContent } from "@/components/ui/card";
import { Skeleton } from "@/components/ui/skeleton";
import { Bill } from "../bill.types";
import { Badge } from "@/components/ui/badge";
import Link from "next/link";
import { Download } from "lucide-react";
import { format } from "date-fns";

export type BillDetailProp = {
    bill?: Bill;
    billIsLoading: boolean;
    billError?: string | null;
    refetch: () => void;
}
export function BillDetail({bill, billIsLoading, billError, refetch }: BillDetailProp) {
    return (
        <main>
            <div className="flex items-center justify-between mx-4 my-2">
                <h1 className="text-md font-semibold">Details</h1>
            </div>
            <Card>
                <CardContent>
                    {billError ? 
                        (<p className="mx-auto text-destructive text-sm">
                            Error loading bill. 
                            {refetch && (<span className="font-bold cursor-pointer" onClick={()=> refetch()}><u>reload</u></span>)}
                        </p>):(<>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-0">
                        <div className="flex items-center justify-between md:border-r md:pr-4 md:pb-4">
                            <span className="text-sm font-medium">Invoice Number:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm">{bill?.invoiceNumber ?? "N/A"}</span>)}
                        </div>
                        <div className="flex items-center justify-between md:border-l md:pl-4 md:pb-4">
                            <span className="text-sm font-medium">Total Amount Due:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm">{bill?.totalAmountDue.toLocaleString() ?? "N/A"}</span>)}
                        </div>
                        <div className="flex items-center justify-between md:border-r md:pr-4 md:pb-4">
                            <span className="text-sm font-medium">Request ID:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm">{bill?.requestId ?? "N/A"}</span>)}
                        </div>
                        <div className="flex items-center justify-between md:border-l md:pl-4 md:pb-4">
                            <span className="text-sm font-medium">Scope:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm"><Badge>{bill?.scope ?? "N/A"}</Badge></span>)}
                        </div>
                        <div className="flex items-start justify-between md:border-r md:pr-4 md:pb-4">
                            <span className="text-sm font-medium mr-auto">Generated By:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm text-right">{bill?.generateByUserName ?? "N/A"}</span>)}
                        </div>
                        <div className="flex items-center justify-between md:border-l md:pl-4 md:pb-4">
                            <span className="text-sm font-medium">Area:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm">{bill?.areaName ?? "N/A"}</span>)}
                        </div>
                        <div className="flex items-start justify-between md:border-r md:pr-4 md:pb-4">
                            <span className="text-sm font-medium mr-auto">Is Consolidated:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm text-right">{bill?.isConsolidated ? "Yes": "No"}</span>)}
                        </div>
                        <div className="flex items-center justify-between md:border-l md:pl-4 md:pb-4">
                            <span className="text-sm font-medium">PDF Link:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm">{bill?.pdfUrl ?<Link className="text-primary underline font-bold text-xs" target="blank" href={bill.pdfUrl}><span><Download/></span></Link> : "-"}</span>)}
                        </div>
                        <div className="flex items-start justify-between md:border-r md:pr-4 md:pb-4">
                            <span className="text-sm font-medium mr-auto">Payment Status:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm text-right">{bill?.isConsolidated? "-":<Badge variant={bill?.paymentStatus === 'paid' ? 'default' : bill?.paymentStatus === 'pending' ? 'secondary' : 'default'}>{bill?.paymentStatus}</Badge>}</span>)}
                        </div>
                        <div className="flex items-center justify-between md:border-l md:pl-4 md:pb-4">
                            <span className="text-sm font-medium">Start Date:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm">{bill?.startDate ? format(new Date(bill?.startDate), "PPP") : "-"}</span>)}
                        </div>
                        <div className="flex items-start justify-between md:border-r md:pr-4 md:pb-4">
                            <span className="text-sm font-medium mr-auto">Date Generated:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm text-right">{bill?.createdAt ? format(new Date(bill?.createdAt), "PPP") : "-"}</span>)}
                        </div>
                        <div className="flex items-center justify-between md:border-l md:pl-4 md:pb-4">
                            <span className="text-sm font-medium">End Date:</span>
                            {billIsLoading ? (<Skeleton className="h-[20px] w-[70px] rounded-sm"/>):(
                            <span className="text-sm">{bill?.endDate ? format(new Date(bill?.endDate), "PPP") : "-"}</span>)}
                        </div>
                        <div className="md:border-l md:pl-4 md:pb-4"></div>
                    </div>
                    </>
                    )}
                </CardContent>
            </Card>
        </main>
    );
}